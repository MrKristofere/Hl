name: Download, Compress, Upload, and Lose Our Minds üí•üå™Ô∏è
on:
  workflow_dispatch:
    inputs:
      upl:
        description: 'Comma-separated URLs'
        required: true
        type: string
      tag:
        description: 'Tag'
        required: true
        type: string
      compression:
        description: 'Compression method'
        required: false
        type: choice
        options:
          - none
          - gzip
          - bzip2
          - xz
          - rar
          - 7z
          - zip
      compress_level:
        description: 'Compression level (1-9)'
        required: false
        type: number
        default: 6
      checksum:
        description: 'Enable CRC32 checksum verification'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  id-token: write
  actions: read

jobs:
  download_compress_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y aria2 curl jq unzip p7zip-full rsync zip gzip bzip2 xz-utils python3-pip genisoimage
          pip3 install crc32c
          echo "Dependencies installed."

      - name: Download files
        run: |
          IFS=',' read -r -a urls <<< "${{ inputs.upl }}"
          aria2c -d dloa -x 16 -s 16 --continue=true --max-connection-per-server=4 "${urls[@]}" &
          wait

      - name: Verify downloads
        run: |
          echo "Downloaded files:"
          ls -lh dloa

      - name: Verify CRC32 checksum
        if: ${{ inputs.checksum == true }}
        run: |
          echo "Verifying CRC32 checksums..."
          # Python script for CRC32 ‚Äî a ritual of trust in a world full of deceiving bits
          for file in dloa/*; do
            crc32_value=$(python3 -c "import zlib; print(f'{zlib.crc32(open(\"$file\", \"rb\").read()):08x}')")
            echo "File: $file, CRC32: $crc32_value"
          done

      - name: Extract files
        run: |
          for file in dloa/*; do
            if [[ "$file" == *.tar.gz || "$file" == *.zip || "$file" == *.tar.bz2 || "$file" == *.tar.xz || "$file" == *.rar || "$file" == *.7z ]]; then
              mkdir -p "dloa/$(basename "$file" .${file##*.})"
              case $file in
                *.zip) 7z x "$file" -o"dloa/$(basename "$file" .zip)" ;;
                *.rar) 7z x "$file" -o"dloa/$(basename "$file" .rar)" ;;
                *.7z) 7z x "$file" -o"dloa/$(basename "$file" .7z)" ;;
                *.tar.gz) tar -xvzf "$file" -C "dloa/$(basename "$file" .tar.gz)" ;;
                *.tar.bz2) tar -xvjf "$file" -C "dloa/$(basename "$file" .tar.bz2)" ;;
                *.tar.xz) tar -xvJf "$file" -C "dloa/$(basename "$file" .tar.xz)" ;;
              esac
            elif [[ "$file" == *.iso ]]; then
              mkdir -p "dloa/iso_contents"
              isoinfo -i "$file" -l > "dloa/iso_contents/contents.txt"
              cat "dloa/iso_contents/contents.txt"
            fi
          done

      - name: Compress files
        if: ${{ inputs.compression != 'none' }}
        run: |
          case ${{ inputs.compression }} in
            gzip) tar -cvzf "dloa_compressed.tar.gz" -C dloa . ;;
            bzip2) tar -cvjf "dloa_compressed.tar.bz2" -C dloa . ;;
            xz) tar -cvJf "dloa_compressed.tar.xz" -C dloa . ;;
            rar) 7z a -m0=rar -mx${{ inputs.compress_level }} "dloa_compressed.rar" "dloa/*" ;; 
            7z) 7z a -mx${{ inputs.compress_level }} "dloa_compressed.7z" "dloa/*" ;;
            zip) 7z a -tzip -mx${{ inputs.compress_level }} "dloa_compressed.zip" "dloa/*" ;;  
            *) echo "No compression selected." ;;
          esac

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dloa/*
            dloa_compressed.tar.gz
            dloa_compressed.tar.bz2
            dloa_compressed.tar.xz
            dloa_compressed.rar
            dloa_compressed.7z
            dloa_compressed.zip
          tag_name: ${{ inputs.tag }}
