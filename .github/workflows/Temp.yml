name: Download and Extract ISO Files
on:
  workflow_dispatch:
    inputs:
      iso_url:
        description: 'URL of the ISO file to download'
        required: true

permissions:
  contents: write  # Required for uploading files to GitHub Releases
  packages: write  # Optional, if you're using GitHub Packages

jobs:
  download_and_extract:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y aria2 p7zip-full fuseiso

      - name: Create Download Directory
        run: mkdir -p ${{ github.workspace }}/download

      - name: Download ISO
        run: |
          aria2c "${{ github.event.inputs.iso_url }}" -d ${{ github.workspace }}/download
          echo "Downloaded ISO files:"
          find ${{ github.workspace }}/download -name "*.iso"

      - name: Verify Downloaded ISO
        run: |
          if [ ! -f ${{ github.workspace }}/download/*.iso ]; then
            echo "No ISO file found!"
            exit 1
          fi
          echo "ISO file found:"
          ls -lh ${{ github.workspace }}/download/*.iso

      - name: Create Mount Point
        run: mkdir -p ${{ github.workspace }}/download/mnt/iso

      - name: Mount ISO and Extract Files
        run: |
          # Attempt to mount the ISO file
          if ! fuseiso ${{ github.workspace }}/download/*.iso ${{ github.workspace }}/download/mnt/iso; then
            echo "Failed to mount the ISO file."
            exit 1
          fi

          echo "Mounted ISO contents:"
          find ${{ github.workspace }}/download/mnt/iso

          # Create a directory for extracted files
          mkdir -p ${{ github.workspace }}/download/extracted_files

          # Copy all files from the mounted ISO to extracted_files directory
          cp ${{ github.workspace }}/download/mnt/iso/* ${{ github.workspace }}/download/extracted_files/
          echo "Extracted files before filtering:"
          find ${{ github.workspace }}/download/extracted_files

          # Extract only .dll and .emu files
          7z e ${{ github.workspace }}/download/extracted_files/*.dll ${{ github.workspace }}/download/extracted_files/*.emu || true

          echo "Extracted .dll and .emu files:"
          find ${{ github.workspace }}/download/extracted_files -name "*.dll"
          find ${{ github.workspace }}/download/extracted_files -name "*.emu"

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v32"
          files: |
            ${{ github.workspace }}/download/extracted_files/*.dll
            ${{ github.workspace }}/download/extracted_files/*.emu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
