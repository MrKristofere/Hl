name: Download and Process Archive

on:
  workflow_dispatch:
    inputs:
      file_url:
        description: 'URL of the archive file (.zip, .rar, .7z)'
        required: true

permissions:
  contents: write  # Grant write permissions for creating releases

jobs:
  download_and_process:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y aria2 unzip unrar p7zip-full genisoimage mount udisks2

      - name: Download file using aria2
        run: |
          aria2c -c -x 16 -s 8 -j 6 -o archive.zip ${{ github.event.inputs.file_url }} &
          wait

      - name: Extract main archive
        run: |
          mkdir extracted
          if [[ ${{ github.event.inputs.file_url }} == *.zip ]]; then
            unzip archive.zip -d extracted
          elif [[ ${{ github.event.inputs.file_url }} == *.rar ]]; then
            unrar x archive.zip extracted/
          elif [[ ${{ github.event.inputs.file_url }} == *.7z ]]; then
            7z x archive.zip -oextracted
          fi

      - name: Handle multi-volume archives
        run: |
          # Check for any multi-volume archives in the extracted folder
          for file in extracted/*; do
            if [[ $file == *.part* ]]; then
              echo "Found multi-volume archive: $file"
              # Extract multi-volume RAR files
              if [[ $file == *.rar ]]; then
                unrar x "$file" extracted/
              # Extract multi-volume 7z files
              elif [[ $file == *.7z ]]; then
                7z x "$file" -oextracted
              fi
            fi
          done

      - name: Mount ISO
        run: |
          sudo chmod 777 /mnt
          sudo mkdir -p /mnt/iso
          sudo mount -o loop extracted/*.iso /mnt/iso

      - name: List files in ISO using find
        run: |
          find /mnt/iso -type f

      - name: Extract DLL and EMU files
        run: |
          find /mnt/iso -type f \( -name "*.dll" -o -name "*.emu" \) -exec cp {} ./extracted/ \;

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: 'v1.0.0'  # Replace with dynamic versioning as needed
          files: './extracted/*'
          body_path: CHANGELOG.md  # Optional, if you have a changelog file
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
