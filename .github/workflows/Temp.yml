name: Download and Extract ISO Files
on:
  workflow_dispatch:
    inputs:
      iso_url:
        description: 'URL of the ISO file to download'
        required: true

permissions:
  contents: write
  packages: write

jobs:
  download_and_extract:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y aria2 p7zip-full fuseiso

      - name: Create Download Directory
        run: mkdir -p ${{ github.workspace }}/download

      - name: Download ISO
        run: |
          aria2c "${{ github.event.inputs.iso_url }}" -d ${{ github.workspace }}/download || { echo "Download failed"; exit 1; }
          echo "Downloaded ISO files:"
          find ${{ github.workspace }}/download -name "*.iso"

      - name: Verify Downloaded ISO
        run: |
          ISO_FILE=$(find ${{ github.workspace }}/download -name "*.iso" -type f | head -n 1)
          if [ -z "$ISO_FILE" ]; then
            echo "No ISO file found!"
            exit 1
          fi
          echo "ISO file found: $ISO_FILE"

      - name: Create Mount Point
        run: mkdir -p ${{ github.workspace }}/download/mnt/iso

      - name: Mount ISO and Extract Files
        run: |
          ISO_FILE=$(find ${{ github.workspace }}/download -name "*.iso" -type f | head -n 1)
          trap 'fusermount -u ${{ github.workspace }}/download/mnt/iso' EXIT
          if ! fuseiso "$ISO_FILE" ${{ github.workspace }}/download/mnt/iso; then
            echo "Failed to mount the ISO file."
            exit 1
          fi

          echo "Mounted ISO contents:"
          find ${{ github.workspace }}/download/mnt/iso

          mkdir -p ${{ github.workspace }}/download/extracted_files
          cp -r ${{ github.workspace }}/download/mnt/iso/* ${{ github.workspace }}/download/extracted_files/

          echo "Extracted files before filtering:"
          find ${{ github.workspace }}/download/extracted_files

          find ${{ github.workspace }}/download/extracted_files -type f -name "*.dll" -o -name "*.emu" -exec 7z e {} -o${{ github.workspace }}/download/extracted_files/ \;

          echo "Extracted .dll and .emu files:"
          find ${{ github.workspace }}/download/extracted_files -name "*.dll"
          find ${{ github.workspace }}/download/extracted_files -name "*.emu"

      - name: Upload to GitHub Releases
        if: always()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "v32"
          files: |
            ${{ github.workspace }}/download/extracted_files/*.dll
            ${{ github.workspace }}/download/extracted_files/*.emu
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
